/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 900  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

/ {
    macros {
        prev_word: prev_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LCTRL>
                     , <&macro_tap &kp LEFT>
                     , <&macro_release &kp LCTRL>;
        };

        next_word: next_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LCTRL>
                     , <&macro_tap &kp RIGHT>
                     , <&macro_release &kp LCTRL>;
        };
        // Line start (equivalent to QMK's LSTRT)
        line_start: line_start {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp HOME>;
        };

        // Line end (equivalent to QMK's LEND)
        line_end: line_end {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp END>;
        };
        // Browser back (equivalent to QMK's WBAK)
        browser_back: browser_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LALT>
                     , <&macro_tap &kp LEFT>
                     , <&macro_release &kp LALT>;
        };

        // Browser forward (equivalent to QMK's WFWD)
        browser_forward: browser_forward {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LALT>
                     , <&macro_tap &kp RIGHT>
                     , <&macro_release &kp LALT>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {

            bindings = <
//        ┌──────┬───┬────────────┬────────────┬────────────┬────────────┐           ┌────────────┬──────────────┬────────────┬────────────┬───┬──────┐
//        │ tab  │ Q │     W      │     F      │     P      │     B      │           │     J      │      L       │     U      │     Y      │ ; │  '   │
//        ├──────┼───┼────────────┼────────────┼────────────┼────────────┤           ├────────────┼──────────────┼────────────┼────────────┼───┼──────┤
//        │ esc  │ A │ &hm lctl R │ &hm lalt S │ &hm lsft T │ &hm lgui G │           │ &hm lgui M │  &hm lsft N  │ &hm lalt E │ &hm lctl I │ O │ bspc │
//        ├──────┼───┼────────────┼────────────┼────────────┼────────────┤           ├────────────┼──────────────┼────────────┼────────────┼───┼──────┤
//        │ lsft │ X │     C      │     D      │     V      │     Z      │           │     /      │      K       │     H      │     ,      │ . │ del  │
//        └──────┴───┴────────────┼────────────┼────────────┼────────────┤           ├────────────┼──────────────┼────────────┼────────────┴───┴──────┘
//                                │    mo 3    │  lt 4 spc  │    mo 1    │           │    mo 2    │ &hm lsft ent │    mo 4    │
//                                └────────────┴────────────┴────────────┘           └────────────┴──────────────┴────────────┘
      &kp TAB     &kp Q   &kp W         &kp F        &kp P         &kp B                    &kp J        &kp L           &kp U        &kp Y         &kp SEMI   &kp SQT
      &kp ESC     &kp A   &hm LCTRL R   &hm LALT S   &hm LSHFT T   &hm LGUI G               &hm LGUI M   &hm LSHFT N     &hm LALT E   &hm LCTRL I   &kp O      &kp BSPC
      &kp LSHFT   &kp X   &kp C         &kp D        &kp V         &kp Z                    &kp FSLH     &kp K           &kp H        &kp COMMA     &kp DOT    &kp DEL
                                        &mo 3        &lt 4 SPACE   &mo 1                    &mo 2        &hm LSHFT RET   &mo 4
            >;
        };

        lower_layer {

            bindings = <
//        ┌─────┬───┬────────────┬────────────┬────────────┬────────────┐           ┌────────────┬────────────┬────────────┬────────────┬───┬──────┐
//        │  `  │ ~ │    kp_+    │    kp_-    │    kp_*    │    kp_/    │           │     $      │     <      │     |      │     >      │ ` │  =   │
//        ├─────┼───┼────────────┼────────────┼────────────┼────────────┤           ├────────────┼────────────┼────────────┼────────────┼───┼──────┤
//        │     │ 1 │ &hm lctl 2 │ &hm lalt 3 │ &hm lsft 4 │ &hm lgui 5 │           │ &hm lgui 6 │ &hm lsft 7 │ &hm lalt 8 │ &hm lctl 9 │ 0 │ bspc │
//        ├─────┼───┼────────────┼────────────┼────────────┼────────────┤           ├────────────┼────────────┼────────────┼────────────┼───┼──────┤
//        │     │ _ │     [      │     {      │    kp_(    │     =      │           │     \      │     )      │     }      │     ]      │ @ │ del  │
//        └─────┴───┴────────────┼────────────┼────────────┼────────────┤           ├────────────┼────────────┼────────────┼────────────┴───┴──────┘
//                               │            │    spc     │            │           │            │    ent     │            │
//                               └────────────┴────────────┴────────────┘           └────────────┴────────────┴────────────┘
      &kp GRAVE   &kp TILDE   &kp KP_PLUS    &kp KP_MINUS   &kp KP_MULTIPLY   &kp KP_SLASH               &kp DLLR      &kp LT         &kp PIPE      &kp GT         &kp GRAVE   &kp EQUAL
      &none       &kp N1      &hm LCTRL N2   &hm LALT N3    &hm LSHFT N4      &hm LGUI N5                &hm LGUI N6   &hm LSHFT N7   &hm LALT N8   &hm LCTRL N9   &kp N0      &kp BSPC
      &none       &kp UNDER   &kp LBKT       &kp LBRC       &kp KP_LPAR       &kp EQUAL                  &kp BSLH      &kp RPAR       &kp RBRC      &kp RBKT       &kp AT      &kp DEL
                                             &none          &kp SPACE         &trans                     &none         &kp RET        &none
            >;
        };

        raise_layer {

            bindings = <
//        ┌─────┬─────┬─────────────┬─────────────┬─────────────┬─────────────┐           ┌─────────────┬────────────┬───────────────┬──────────────────┬─────┬─────┐
//        │     │ f10 │     f9      │     f8      │     f7      │     f6      │           │    pgup     │ &prev_word │      up       │    &next_word    │     │     │
//        ├─────┼─────┼─────────────┼─────────────┼─────────────┼─────────────┤           ├─────────────┼────────────┼───────────────┼──────────────────┼─────┼─────┤
//        │     │ f1  │ &hm lctl f2 │ &hm lalt f3 │ &hm lsft f4 │ &hm lgui f5 │           │    pgdn     │    left    │     down      │       rght       │     │     │
//        ├─────┼─────┼─────────────┼─────────────┼─────────────┼─────────────┤           ├─────────────┼────────────┼───────────────┼──────────────────┼─────┼─────┤
//        │     │     │             │             │             │             │           │ &line_start │ &line_end  │ &browser_back │ &browser_forward │     │     │
//        └─────┴─────┴─────────────┼─────────────┼─────────────┼─────────────┤           ├─────────────┼────────────┼───────────────┼──────────────────┴─────┴─────┘
//                                  │             │             │             │           │             │            │               │
//                                  └─────────────┴─────────────┴─────────────┘           └─────────────┴────────────┴───────────────┘
      &none   &kp F10   &kp F9         &kp F8        &kp F7         &kp F6                    &kp PG_UP     &prev_word   &kp UP          &next_word         &none   &none
      &none   &kp F1    &hm LCTRL F2   &hm LALT F3   &hm LSHFT F4   &hm LGUI F5               &kp PG_DN     &kp LEFT     &kp DOWN        &kp RIGHT          &none   &none
      &none   &none     &none          &none         &none          &none                     &line_start   &line_end    &browser_back   &browser_forward   &none   &none
                                       &none         &none          &none                     &trans        &none        &none
            >;
        };

        function_layer {

            bindings = <
//        ┌─────┬─────┬───────────────┬──────────────────┬─────────────┬───────────┐           ┌──────────┬──────────┬──────────┬──────────┬──────────┬─────┐
//        │     │     │  &prev_word   │        up        │ &next_word  │   pgup    │           │ lalt(f1) │ lalt(f2) │          │          │ lalt(f4) │     │
//        ├─────┼─────┼───────────────┼──────────────────┼─────────────┼───────────┤           ├──────────┼──────────┼──────────┼──────────┼──────────┼─────┤
//        │     │     │     left      │       down       │    rght     │   pgdn    │           │          │          │          │          │          │     │
//        ├─────┼─────┼───────────────┼──────────────────┼─────────────┼───────────┤           ├──────────┼──────────┼──────────┼──────────┼──────────┼─────┤
//        │     │     │ &browser_back │ &browser_forward │ &line_start │ &line_end │           │ bt_sel 4 │ bt_sel 3 │ bt_sel 2 │ bt_sel 1 │ bt_sel 0 │     │
//        └─────┴─────┴───────────────┼──────────────────┼─────────────┼───────────┤           ├──────────┼──────────┼──────────┼──────────┴──────────┴─────┘
//                                    │                  │             │           │           │          │          │          │
//                                    └──────────────────┴─────────────┴───────────┘           └──────────┴──────────┴──────────┘
      &none   &none   &prev_word      &kp UP             &next_word    &kp PG_UP               &kp LALT(F1)   &kp LALT(F2)   &none          &none          &kp LALT(F4)   &none
      &none   &none   &kp LEFT        &kp DOWN           &kp RIGHT     &kp PG_DN               &none          &none          &none          &none          &none          &none
      &none   &none   &browser_back   &browser_forward   &line_start   &line_end               &bt BT_SEL 4   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0   &none
                                      &trans             &none         &none                   &none          &none          &none
            >;
        };

        media_layer {

            bindings = <
//        ┌─────┬─────┬───────────────┬─────┬─────┬─────┐           ┌────────────────┬────────────────┬────────────────┬────────────────┬──────┬──────┐
//        │     │     │               │     │     │     │           │  &msc SCRL_up  │      lclk      │  &mmv MOVE_up  │      rclk      │      │ bri+ │
//        ├─────┼─────┼───────────────┼─────┼─────┼─────┤           ├────────────────┼────────────────┼────────────────┼────────────────┼──────┼──────┤
//        │     │     │               │     │     │     │           │ &msc SCRL_down │ &mmv MOVE_left │ &mmv MOVE_down │ &mmv MOVE_rght │      │ bri- │
//        ├─────┼─────┼───────────────┼─────┼─────┼─────┤           ├────────────────┼────────────────┼────────────────┼────────────────┼──────┼──────┤
//        │     │     │ lgui(lsft(W)) │     │     │     │           │      vold      │      volu      │      prev      │      next      │ play │ mute │
//        └─────┴─────┴───────────────┼─────┼─────┼─────┤           ├────────────────┼────────────────┼────────────────┼────────────────┴──────┴──────┘
//                                    │     │     │     │           │                │                │                │
//                                    └─────┴─────┴─────┘           └────────────────┴────────────────┴────────────────┘
      &none   &none   &none           &none   &none    &none               &msc SCRL_UP     &mkp LCLK        &mmv MOVE_UP     &mkp RCLK         &none      &kp C_BRI_UP
      &none   &none   &none           &none   &none    &none               &msc SCRL_DOWN   &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_RIGHT   &none      &kp C_BRI_DN
      &none   &none   &kp LG(LS(W))   &none   &none    &none               &kp C_VOL_DN     &kp C_VOL_UP     &kp C_PREV       &kp C_NEXT        &kp C_PP   &kp C_MUTE
                                      &none   &trans   &none               &none            &none            &trans
          >;
      };
    };
};
